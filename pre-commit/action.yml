name: 'pre-commit'
description: 'Execute pre-commit for Terraform codebase'
inputs:
  version:
    description: 'Terraform version supported for use in evaluation'
    required: true
  terraform-docs-version:
    description: 'Version of terraform-docs to use when evaluating checks'
    required: false
    default: 'v0.15.0'
  args:
    description: 'Arguments to pass to pre-commit'
    required: false
    default: '--all-files --color always --show-diff-on-failure'
runs:
  using: 'composite'
  steps:
    - name: Install Terraform v${{ inputs.version }}
      shell: bash
      run: |
        curl -sO https://releases.hashicorp.com/terraform/${{ inputs.version }}/terraform_${{ inputs.version }}_linux_amd64.zip
        unzip -qq terraform_${{ inputs.version }}_linux_amd64.zip && rm terraform_${{ inputs.version }}_linux_amd64.zip 2> /dev/null && sudo mv terraform /usr/bin/

    - name: Install pre-commit dependencies
      shell: bash
      run: |
        pip install -q pre-commit
        curl -sLo ./terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/${{ inputs.terraform-docs-version }}/terraform-docs-${{ inputs.terraform-docs-version }}-$(uname)-amd64.tar.gz && tar -xzf terraform-docs.tar.gz terraform-docs && chmod +x terraform-docs && sudo mv terraform-docs /usr/bin/
        curl -sL "$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E "https://.+?_linux_amd64.zip")" > tflint.zip && unzip -qq tflint.zip && rm tflint.zip 2> /dev/null && sudo mv tflint /usr/bin/

    - name: Execute pre-commit
      shell: bash
      run: pre-commit run ${{ inputs.args }}
